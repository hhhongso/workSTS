<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

<security:http auto-config="true" use-expressions="true"> 
	<security:csrf disabled="true"/>
	<security:intercept-url pattern="/**" access="hasRole('ROLE_USER')" /> 
	<security:form-login login-page="/login" 
						authentication-success-handler-ref="loginSuccessHandler" 
						authentication-failure-handler-ref="loginFailureHandler" 
						login-processing-url="/auth" 
						username-parameter="id" 
						password-parameter="pw" /> 
	<security:logout logout-url="/logout" invalidate-session="true" logout-success-url="/login?status=logout" /> 
	<security:session-management invalid-session-url="/login"> 
		<security:concurrency-control max-sessions="1" error-if-maximum-exceeded="false" /> 
	</security:session-management> 
</security:http> 
<!-- 
auto-config: true -> default 값으로 동작. 
			false -> anonymous, x509, http-basic, session-management, expression-handler, 
			custom-filter, port-mappings, request-cache, remember-me 를 정의해주어야 한다. 			
use-expressions: spring 표현식 (spEL)의 사용여부 

csrf: csrf 보안 설정 여부

intercept-url: pattern에 정의된 경로에 대해 access 권한을 지정 (filter가 감시)
 -개인적으로 xml설정으로 url 감시하는 것은 swagger, static 리소스 같이 안보이는 것들만 해주고 컨트롤러단에서는 어노테이션을 이용하는 것이 가독성이 더 좋아보인다.

form-login : 
	login-page : login form 페이지 URL
	username-parameter : form id의 name 속성값
	password-parameter : form pw의 name 속성값
	login-processing-url : form action 값 (security를 이용해 인증처리)
	default-target-url : 로그인 성공 시 이동 URL
	authentication-failure-url : 로그인 실패 시 이동 URL
	always-use-default-target : true 로 하면 무조건 default-target-url 로 이동한다. false 로 하면 authentication-success-handler 대로 redirect 된다.
	authentication-success-handler-ref : 로그인 성공 시 프로세스 정의, bean id 입력. 만약 최종 로그인 일시를 DB에 기록해야한다면 handler로 처리하는게 좋겠다.
										res.sendRedirect 등으로 처리
	authentication-failure-handler-ref : 로그인 실패 시 프로세스 정의, bean id 입력

logout: 
	logout-url : 로그아웃 처리할 URL (security가 알아서 만들기 때문에, 이 경로로 요청만 하면된다)
	logout-success-url : 로그아웃 성공 시 이동 URL
	success-handler-ref : 로그아웃 성공 시 프로세스 정의, bean id 입력
	invalidate-session : 로그아웃 시 세션 삭제여부

session-management:
	invalid-session-url : invalid session(세션 타임아웃 등) 일 때 이동 URL
	max-sessions : 최대 허용 가능한 세션 수
	expired-url : 중복 로그인 발생시 이동 URL (처음 접속한 세션이 invalidate가 되고 다음 요청시 invalid-session-url로 이동)
	error-if-maximum-exceeded : max-sessions을 넘었을때 접속한 세션을 실패처리할지 여부 (expired-url와 얘중에 하나만 쓰면 될듯)

출처: https://sjh836.tistory.com/165 [빨간색코딩] -->


<!-- secured method --> 
<security:global-method-security secured-annotations="enabled" /> 

<!-- provider --> 
 <security:authentication-manager>
	<security:authentication-provider> <!--  ref="userAuthHelper"  -->
		<security:user-service>
			<security:user name="user" password="userPw" authorities="ROLE_USER"/>
			<security:user name="guest" password="guest" authorities="ROLE_GUEST"/>
		</security:user-service>
	</security:authentication-provider>
	 
</security:authentication-manager>

<!-- 로그인 성공 시 동작하게 할 수 있는 핸들러 -->
<bean id="loginSuccessHandler" class="member.secu.LoginSuccessHandler"> 
	<property name="defaultTargetUrl" value="/main" /> 
	<property name="alwaysUseDefaultTargetUrl" value="true" /> 
</bean> 

<!--  로그인 실패 시 동작하게 할 수 있는 핸들러 -->
<bean id="loginFailureHandler" class="member.secu.LoginFailureHandler"> 
	<property name="defaultFailureUrl" value="/login?status=fail" /> 
</bean> 

<bean id="userAuthService" class="member.secu.UserAuthService" /> 
<bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" /> 
<!-- <bean id="userAuthProvider" class="member.secu.UserAuthProvider"> 
	<property name="userDetailsService" ref="userAuthService" /> 
	<property name="passwordEncoder" ref="passwordEncoder" /> 
</bean> -->

<!-- 출처: https://sjh836.tistory.com/165 [빨간색코딩] -->


</beans>
